#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
export PATH=$PATH:/usr/lib/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
export PATH="$PATH:/opt/perforce/p4/bin"
typeset -U PATH

alias c=colorize_via_pygmentize
alias hadoop='nocorrect hadoop'
alias hi='rlwrap --always-readline -t dumb hive'
alias hl='hdfs dfs -ls'
alias xclip='xclip -selection c'

alias e='exa -1 -a'      # Lists in one column, hidden files.
alias el='exa -l'        # Lists human readable sizes.
alias er='el -R'         # Lists human readable sizes, recursively.
alias ea='el -a'         # Lists human readable sizes, hidden files.
alias es='el -s size'    # Lists sorted by size, largest last.
alias ex='el -s extension' # Lists sorted by extension (GNU only).
alias em='el -a | "$PAGER"' # Lists human readable sizes, hidden files through pager.
alias et='el -s created' # Lists sorted by date, most recent last.
alias ec='el -s modified' # Lists sorted by date, most recent last, shows change time.
alias eu='el -s accessed' # Lists sorted by date, most recent last, shows access time.

alias colorize='colorize_via_pygmentize'
colorize_via_pygmentize() {
    if [ ! -x "$(which pygmentize)" ]; then
        echo "package \'pygmentize\' is not installed!"
        return -1
    fi

    if [ $# -eq 0 ]; then
        pygmentize -g $@
    fi

    for FNAME in $@
    do
        filename=$(basename "$FNAME")
        lexer=`pygmentize -N \"$filename\"`
        if [ "Z$lexer" != "Ztext" ]; then
            pygmentize -l $lexer "$FNAME"
        else
            pygmentize -g "$FNAME"
        fi
    done
}

function cl() {
FILENAMES=("$@")
    colorize $FILENAMES | less
}

function git_permission_reset() {
    git diff -p -R | grep -E "^(diff|(old|new) mode)" | git apply
}

# ghc-pkg-reset
# Removes all installed GHC/cabal packages, but not binaries, docs, etc.
# Use this to get out of dependency hell and start over, at the cost of some rebuilding time.
function ghc-pkg-reset() {
    # bash: read -p 'erasing all your user ghc and cabal packages - are you sure (y/n) ? ' ans
    read -q "ans?Erasing all your user ghc and cabal packages - are you sure (y/n) ?"
    [[ $ans == 'y' ]] && ( \
        echo 'erasing directories under ~/.ghc'; rm -rf `find ~/.ghc -maxdepth 1 -type d`; \
        echo 'erasing ~/.cabal/lib'; rm -rf ~/.cabal/lib; \
        echo 'erasing ~/.cabal/packages'; rm -rf ~/.cabal/packages; \
        echo 'erasing ~/.cabal/share'; rm -rf ~/.cabal/share; \
        )
}

# Local machine specific shell setup that we don't want to commit to source control
if [[ -f ~/.zshrc.local ]]; then
    source ~/.zshrc.local
fi
